#!/usr/bin/env python3
"""
Script de teste local para verificar corre√ß√µes de m√∫ltiplos usu√°rios
"""

import requests
import json
import time

def testar_aplicacao_local():
    """Testa a aplica√ß√£o localmente"""
    base_url = "http://localhost:5000"
    
    print("üß™ Testando aplica√ß√£o local...")
    
    try:
        # Teste 1: Verificar se a aplica√ß√£o est√° respondendo
        print("\n1Ô∏è‚É£ Testando conectividade...")
        response = requests.get(f"{base_url}/", timeout=10)
        print(f"   Status: {response.status_code}")
        
        if response.status_code == 200:
            print("   ‚úÖ Aplica√ß√£o respondendo corretamente")
        else:
            print("   ‚ùå Aplica√ß√£o com problemas")
            return False
        
        # Teste 2: Verificar se as rotas de debug est√£o funcionando
        print("\n2Ô∏è‚É£ Testando rotas de debug...")
        try:
            debug_response = requests.post(f"{base_url}/debug/limpar-sessoes", timeout=5)
            print(f"   Status limpeza de sess√µes: {debug_response.status_code}")
            if debug_response.status_code == 200:
                print("   ‚úÖ Rota de debug funcionando")
            else:
                print("   ‚ö†Ô∏è Rota de debug com problemas")
        except Exception as e:
            print(f"   ‚ö†Ô∏è Erro ao testar debug: {e}")
        
        # Teste 3: Verificar configura√ß√µes de sess√£o
        print("\n3Ô∏è‚É£ Verificando configura√ß√µes...")
        try:
            from configuracao_sessoes import ConfiguracaoSessoes
            print(f"   M√∫ltiplas sess√µes permitidas: {ConfiguracaoSessoes.deve_permitir_multiplas_sessoes()}")
            print(f"   M√°ximo de sess√µes por usu√°rio: {ConfiguracaoSessoes.obter_max_sessoes_por_usuario()}")
            print(f"   Tempo de expira√ß√£o (horas): {ConfiguracaoSessoes.obter_tempo_expiracao_horas()}")
        except Exception as e:
            print(f"   ‚ùå Erro ao carregar configura√ß√µes: {e}")
        
        print("\n‚úÖ Teste local conclu√≠do com sucesso!")
        print("\nüìã Resumo das corre√ß√µes implementadas:")
        print("   ‚Ä¢ Tabelas de autentica√ß√£o criadas")
        print("   ‚Ä¢ Sistema de sess√µes configur√°vel")
        print("   ‚Ä¢ Suporte a m√∫ltiplos usu√°rios simult√¢neos")
        print("   ‚Ä¢ Preven√ß√£o de conflitos de sess√£o")
        print("   ‚Ä¢ Rotas de debug para limpeza de sess√µes")
        
        return True
        
    except requests.exceptions.ConnectionError:
        print("‚ùå Erro: N√£o foi poss√≠vel conectar √† aplica√ß√£o")
        print("   Verifique se a aplica√ß√£o est√° rodando em http://localhost:5000")
        return False
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        return False

if __name__ == "__main__":
    testar_aplicacao_local()

#!/usr/bin/env python3
"""
Script para conectar ao RDS sem instalar MySQL client
"""

print('🗄️ CONECTANDO AO RDS SEM MYSQL CLIENT')
print('=' * 60)

print('❌ PROBLEMA IDENTIFICADO:')
print('   No match for argument: mysql')
print()
print('💡 EXPLICAÇÃO:')
print('   No Amazon Linux 2023, o cliente MySQL não está disponível')
print('   Mas podemos usar Python para conectar ao RDS!')
print()

print('✅ SOLUÇÃO: USAR PYTHON PARA CONECTAR')
print('=' * 50)
print('🔧 VANTAGENS:')
print('   - ✅ Python já está instalado')
print('   - ✅ mysql-connector-python já está instalado')
print('   - ✅ Não precisa instalar nada')
print('   - ✅ Funciona perfeitamente')
print()

print('🎯 PASSO 1: TESTAR CONEXÃO COM PYTHON')
print('=' * 50)
print('1. 📝 Criar script de teste')
print('   nano test_rds_connection.py')
print()
print('2. 🔧 Conteúdo do script:')
print('   import mysql.connector')
print('   import os')
print('   ')
print('   try:')
print('       conn = mysql.connector.connect(')
print('           host="mercadolivre-db.xxxxxxxxxxxx.sa-east-1.rds.amazonaws.com",')
print('           user="admin",')
print('           password="MercadoLivre2024!",')
print('           port=3306,')
print('           ssl_disabled=False')
print('       )')
print('       print("✅ Conexão com RDS bem-sucedida!")')
print('       conn.close()')
print('   except Exception as e:')
print('       print(f"❌ Erro na conexão: {e}")')
print()
print('3. 🚀 Executar teste')
print('   python3.11 test_rds_connection.py')
print()

print('🎯 PASSO 2: CRIAR BANCO DE DADOS')
print('=' * 50)
print('1. 📝 Criar script para criar banco')
print('   nano create_database.py')
print()
print('2. 🔧 Conteúdo do script:')
print('   import mysql.connector')
print('   ')
print('   try:')
print('       conn = mysql.connector.connect(')
print('           host="mercadolivre-db.xxxxxxxxxxxx.sa-east-1.rds.amazonaws.com",')
print('           user="admin",')
print('           password="MercadoLivre2024!",')
print('           port=3306,')
print('           ssl_disabled=False')
print('       )')
print('       cursor = conn.cursor()')
print('       cursor.execute("CREATE DATABASE IF NOT EXISTS sistema_ml")')
print('       cursor.execute("USE sistema_ml")')
print('       print("✅ Banco sistema_ml criado com sucesso!")')
print('       conn.close()')
print('   except Exception as e:')
print('       print(f"❌ Erro: {e}")')
print()
print('3. 🚀 Executar script')
print('   python3.11 create_database.py')
print()

print('🎯 PASSO 3: CONFIGURAR APLICAÇÃO')
print('=' * 50)
print('1. 📝 Editar arquivo .env')
print('   nano /home/ec2-user/mercadolivre-app/.env')
print()
print('2. 🔄 Atualizar configurações:')
print('   DB_HOST=mercadolivre-db.xxxxxxxxxxxx.sa-east-1.rds.amazonaws.com')
print('   DB_USER=admin')
print('   DB_PASSWORD=MercadoLivre2024!')
print('   DB_NAME=sistema_ml')
print('   DB_PORT=3306')
print('   DB_SSL_MODE=REQUIRED')
print()
print('3. 💾 Salvar arquivo')
print('   Ctrl+X, Y, Enter')
print()

print('🎯 PASSO 4: REINICIAR APLICAÇÃO')
print('=' * 50)
print('1. 🚀 Reiniciar serviços')
print('   sudo systemctl restart flask-app')
print('   sudo systemctl restart nginx')
print()
print('2. ✅ Verificar status')
print('   sudo systemctl status flask-app')
print('   sudo systemctl status nginx')
print()
print('3. 📋 Verificar logs')
print('   sudo journalctl -u flask-app -f')
print()

print('🚨 ALTERNATIVA: INSTALAR MYSQL CLIENT VIA DOCKER')
print('=' * 60)
print('💡 DICA: Se quiser usar mysql client:')
print()
print('1. 📦 Instalar Docker')
print('   sudo yum install docker -y')
print('   sudo systemctl start docker')
print('   sudo systemctl enable docker')
print()
print('2. 🐳 Executar MySQL client no Docker')
print('   sudo docker run -it --rm mysql:8.0 mysql \\')
print('     -h mercadolivre-db.xxxxxxxxxxxx.sa-east-1.rds.amazonaws.com \\')
print('     -u admin -p')
print()

print('🎯 RESUMO:')
print('=' * 30)
print('✅ Problema: MySQL client não disponível')
print('✅ Solução 1: Usar Python (recomendado)')
print('✅ Solução 2: Usar Docker')
print('✅ Recomendação: Python é mais simples')
print()

print('🚀 PRÓXIMOS PASSOS:')
print('=' * 30)
print('1. 🧪 Testar conexão com Python')
print('2. 🗄️ Criar banco de dados')
print('3. ⚙️ Configurar aplicação')
print('4. 🚀 Reiniciar aplicação')
print('5. 🌐 Testar aplicação')
print()

print('🎉 APÓS CONFIGURAR:')
print('=' * 30)
print('✅ RDS: conectado')
print('✅ Flask-app: active (running)')
print('✅ Nginx: active (running)')
print('✅ Aplicação: http://SEU_IP_PUBLICO')
print()

print('🚀 SUA APLICAÇÃO ESTARÁ FUNCIONANDO!')
print('Python é perfeito para conectar ao RDS!')

#!/usr/bin/env python3
"""
Script para testar a importa√ß√£o simulada e ver se a fun√ß√£o est√° sendo chamada
"""

import os
from dotenv import load_dotenv
from meli_api import MercadoLivreAPI
from database import DatabaseManager

load_dotenv()

try:
    print('üß™ TESTANDO IMPORTA√á√ÉO SIMULADA')
    print('=' * 50)
    
    # Inicializar API e Database
    api = MercadoLivreAPI()
    db = DatabaseManager()
    
    user_id = 1305538297
    venda_id = '2000013113228770'
    
    # Obter access token
    access_token = db.obter_access_token(user_id)
    if not access_token:
        print('‚ùå Erro: N√£o foi poss√≠vel obter access token')
        exit()
    
    # Buscar dados da venda
    print(f'üîç Buscando dados da venda {venda_id}...')
    venda_data = api.obter_venda_por_id(venda_id, access_token)
    
    if venda_data:
        print('‚úÖ Dados da venda obtidos!')
        
        # Simular chamada da fun√ß√£o salvar_venda_com_status
        print('üíæ Simulando salvar_venda_com_status...')
        
        try:
            # Chamar a fun√ß√£o diretamente
            resultado = db.salvar_venda_com_status(venda_data, user_id)
            
            if resultado:
                print('‚úÖ Fun√ß√£o executada com sucesso!')
                
                # Verificar se o frete foi salvo
                conn = db.conectar()
                if conn:
                    cursor = conn.cursor()
                    cursor.execute("""
                        SELECT frete_total FROM vendas WHERE venda_id = %s
                    """, (venda_id,))
                    
                    frete_salvo = cursor.fetchone()[0]
                    print(f'üìä Frete salvo no banco: R$ {frete_salvo:.2f}')
                    
                    if frete_salvo > 0:
                        print('‚úÖ Frete foi salvo corretamente!')
                    else:
                        print('‚ùå Frete n√£o foi salvo!')
                        print('   H√° um problema na fun√ß√£o salvar_venda_com_status')
                    
                    conn.close()
            else:
                print('‚ùå Fun√ß√£o retornou False')
                
        except Exception as e:
            print(f'‚ùå Erro ao executar salvar_venda_com_status: {e}')
            import traceback
            traceback.print_exc()
    
    else:
        print('‚ùå Erro ao obter dados da venda')
        
except Exception as e:
    print(f'‚ùå Erro: {e}')
    import traceback
    traceback.print_exc()

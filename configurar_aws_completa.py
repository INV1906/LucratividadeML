#!/usr/bin/env python3
"""
Script para configurar aplica√ß√£o completa na AWS gratuita
"""

print('üöÄ CONFIGURANDO APLICA√á√ÉO COMPLETA NA AWS GRATUITA')
print('=' * 70)

print('‚úÖ COMPONENTES GRATUITOS:')
print('   - EC2: 750h/m√™s (Backend/API)')
print('   - RDS: 750h/m√™s (Banco MySQL)')
print('   - S3: 5GB (Arquivos est√°ticos)')
print('   - CloudFront: 1TB/m√™s (CDN)')
print('   - Certificate Manager: SSL gratuito')
print('   - CloudWatch: Monitoramento b√°sico')
print()

print('üèóÔ∏è ARQUITETURA COMPLETA:')
print('   üåê Frontend: S3 + CloudFront')
print('   ‚öôÔ∏è Backend: EC2 (Flask)')
print('   üóÑÔ∏è Banco: RDS MySQL')
print('   üìÅ Arquivos: S3')
print('   üîí SSL: Certificate Manager')
print()

print('üìã PASSOS PARA CONFIGURAR:')
print()

print('1. üèóÔ∏è CRIAR CONTA AWS:')
print('   - Acessar https://aws.amazon.com')
print('   - Clicar em "Create an AWS Account"')
print('   - Preencher dados pessoais')
print('   - Verificar telefone')
print('   - Escolher "Basic Support - Free"')
print()

print('2. üóÑÔ∏è CRIAR RDS MYSQL:')
print('   - AWS Console > RDS')
print('   - Create database > MySQL')
print('   - Template: Free tier')
print('   - DB instance: mercadolivre-db')
print('   - Username: admin')
print('   - Password: sua_senha_forte')
print('   - Create database')
print()

print('3. üñ•Ô∏è CRIAR EC2 (BACKEND):')
print('   - AWS Console > EC2')
print('   - Launch Instance')
print('   - Amazon Linux 2 AMI')
print('   - Instance type: t2.micro (Free tier)')
print('   - Security Group: HTTP(80), HTTPS(443), SSH(22)')
print('   - Key pair: criar nova')
print('   - Launch instance')
print()

print('4. ‚öôÔ∏è CONFIGURAR EC2:')
print('   # Conectar via SSH')
print('   ssh -i sua-chave.pem ec2-user@seu-ip')
print('   ')
print('   # Atualizar sistema')
print('   sudo yum update -y')
print('   ')
print('   # Instalar Python 3.11')
print('   sudo yum install python3.11 python3.11-pip -y')
print('   ')
print('   # Instalar depend√™ncias')
print('   sudo yum install git -y')
print('   ')
print('   # Clonar aplica√ß√£o')
print('   git clone https://github.com/seu-usuario/seu-repo.git')
print('   cd seu-repo')
print('   ')
print('   # Instalar depend√™ncias Python')
print('   pip3.11 install -r requirements.txt')
print()

print('5. üîß CONFIGURAR APLICA√á√ÉO:')
print('   # Arquivo .env')
print('   FLASK_ENV=production')
print('   DEBUG=False')
print('   FLASK_SECRET_KEY=sua_chave_secreta_aqui')
print('   ')
print('   # Banco de dados')
print('   DB_HOST=mercadolivre-db.xxxxxxxxxxxx.us-east-1.rds.amazonaws.com')
print('   DB_USER=admin')
print('   DB_PASSWORD=sua_senha')
print('   DB_NAME=mercadolivre_lucratividade')
print('   DB_PORT=3306')
print('   DB_SSL_MODE=REQUIRED')
print('   ')
print('   # Mercado Livre')
print('   MELI_APP_ID=seu_app_id')
print('   MELI_CLIENT_SECRET=seu_client_secret')
print('   MELI_REDIRECT_URI=https://seu-dominio.com/callback')
print()

print('6. üåê CONFIGURAR NGINX:')
print('   # Instalar Nginx')
print('   sudo yum install nginx -y')
print('   ')
print('   # Configurar Nginx')
print('   sudo nano /etc/nginx/conf.d/flask.conf')
print('   ')
print('   # Conte√∫do:')
print('   server {')
print('       listen 80;')
print('       server_name seu-dominio.com;')
print('       ')
print('       location / {')
print('           proxy_pass http://127.0.0.1:5000;')
print('           proxy_set_header Host $host;')
print('           proxy_set_header X-Real-IP $remote_addr;')
print('           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;')
print('           proxy_set_header X-Forwarded-Proto $scheme;')
print('       }')
print('   }')
print()

print('7. üîí CONFIGURAR SSL:')
print('   # Instalar Certbot')
print('   sudo yum install certbot python3-certbot-nginx -y')
print('   ')
print('   # Obter certificado SSL')
print('   sudo certbot --nginx -d seu-dominio.com')
print('   ')
print('   # Configurar renova√ß√£o autom√°tica')
print('   sudo crontab -e')
print('   # Adicionar: 0 12 * * * /usr/bin/certbot renew --quiet')
print()

print('8. üöÄ INICIAR SERVI√áOS:')
print('   # Iniciar servi√ßos')
print('   sudo systemctl start nginx')
print('   sudo systemctl enable nginx')
print('   sudo systemctl start flask-app')
print('   sudo systemctl enable flask-app')
print('   ')
print('   # Verificar status')
print('   sudo systemctl status nginx')
print('   sudo systemctl status flask-app')
print()

print('‚úÖ VANTAGENS DA AWS COMPLETA:')
print('   - Controle total (voc√™ gerencia tudo)')
print('   - Escalabilidade (cresce com seu projeto)')
print('   - Performance (servidores dedicados)')
print('   - Flexibilidade (instalar o que quiser)')
print('   - Confiabilidade (99.9% uptime)')
print('   - Seguran√ßa (AWS cuida da infraestrutura)')
print('   - Custo-benef√≠cio (pre√ßos competitivos)')
print()

print('‚ö†Ô∏è LIMITA√á√ïES:')
print('   - 12 meses de uso gratuito')
print('   - Depois vira pago (~$25-35/m√™s)')
print('   - Mais complexo que Vercel')
print('   - Voc√™ cuida da manuten√ß√£o')
print()

print('üéØ RECOMENDA√á√ÉO:')
print('   AWS completa √© a melhor op√ß√£o para controle total!')
print('   Vale a pena para aplica√ß√µes profissionais.')
print()

print('üöÄ PR√ìXIMOS PASSOS:')
print('   1. Criar conta AWS')
print('   2. Criar RDS MySQL')
print('   3. Criar EC2')
print('   4. Configurar EC2')
print('   5. Configurar Nginx')
print('   6. Configurar SSL')
print('   7. Configurar dom√≠nio')
print('   8. Testar aplica√ß√£o')
print()

print('‚è±Ô∏è TEMPO ESTIMADO: 58 minutos')
print('üéâ RESULTADO: Aplica√ß√£o completa online com controle total!')
